// tslint:disable: no-use-before-declare
/**
 * 网络是否联接
 */
let isConnected = false;
/**
 * 是否隐藏在后台
 */
let isHidden = false;
const callbackPools = [];
function checkCallbacks() {
    if (isConnected && !isHidden) {
        while (callbackPools.length > 0) {
            callbackPools.shift()();
        }
    }
}
wx.onAppHide(() => { isHidden = true; });
wx.onAppShow(() => {
    isHidden = false;
    checkCallbacks();
});
wx.onNetworkStatusChange((res) => {
    isConnected = res.isConnected;
    checkCallbacks();
});
wx.getNetworkType({
    success(res) {
        isConnected = res.networkType !== 'none';
        checkCallbacks();
    }
});
/**
 * 确保在线时执行
 * 网络掉线或者切换到后台的情况暂停发送
 * @param callback 回调
 * @param cancelToken 取消操作
 */
export function ensureOnline(callback, cancelToken) {
    if (isConnected && !isHidden) {
        callback();
    }
    else {
        callbackPools.push(callback);
        if (cancelToken) {
            // tslint:disable-next-line: no-floating-promises
            cancelToken.promise.then(() => {
                const index = callbackPools.indexOf(callback);
                if (index !== -1) {
                    callbackPools.splice(index, 1);
                }
            });
        }
    }
}
//# sourceMappingURL=ensure-online.js.map